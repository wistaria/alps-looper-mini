/*****************************************************************************
*
* ALPS/looper mini: MiniAppli for multi-cluster quantum Monte Carlo algorithms
*
* Copyright (C) 1997-2014 by Synge Todo <wistaria@comp-phys.org>,
*                            Haruhiko Matsuo <halm@looper.t.u-tokyo.ac.jp>,
*                            Hideyuki Shitara <shitara.hide@jp.fujitsu.com>
*
* Distributed under the Boost Software License, Version 1.0. (See accompanying
* file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
*
*****************************************************************************/

This directory contains the kernel code (MiniAppli) of the loop
algorithm quantum Monte Carlo method extracted from path_integral.C in
ALPS/looper Library (http://wistaria.comp-phys.org/alps-looper).

  loop.C          main program (serial version)
  loop_mpi.C      main program (parallel version)

  atomic.h atomic_impl.h             compare_and_swap (CAS) functions
  chain_lattice.h lattice_sharing.h  lattice class
  obervable.h     class definition for statistica averaging
                  (simplified version of ALPS/alea)
  options.h       class definition for command line interace
  paralel.h       class for parallel cluster unification
  union_find.h    functions for linked-list management
  expand.h prime_factorizatin.h subaccumulate.h  helper functions

  loop.op         output of loop program (executed with no options)
  loop_mpi.op-X   output of loop_mpi program (executed with no options)
                  X (= 1,2,3,4) denotes the number of processes

Prerequisites

  CMake Utility (http://www.cmake.org)
  Boost C++ Library (http://www.boost.org)
  MPI and OpenMP

Configure options

  -DBoost_ROOT_DIR=...        directory of the Boost source
  -DLOOPER_ENABLE_OPENMP=OFF  disable OpenMP support (default: ON)
  -DLOOPER_ENABLE_TIMER=OFF   disable internal timer (default: ON)

How to configure, compile, and run tests

  cmake [options] source_dir
  make
  ctest
